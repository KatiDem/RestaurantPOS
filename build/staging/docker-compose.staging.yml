version: '3.8'

services:
  web:
    build:
      context: ../../backend
      dockerfile: Dockerfile.staging
    command: gunicorn app.wsgi:application --bind 0.0.0.0:8080
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8080
    ports:
      - "8080:8080"
    env_file:
      - ../../.env.staging
    depends_on:
      - db
      - redis

  db:
    image: postgres:11.5-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ../../.env.staging.db

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - "80:80"
      - "81:81"
    depends_on:
      - web

  redis:
    image: "redis:alpine"

  celery:
    build:
      context: ../../backend
      dockerfile: Dockerfile.staging
    command: celery -A app worker -l info
    volumes:
      - ../../backend:/home/app/web
    env_file:
      - ../../.env.staging
    depends_on:
      - db
      - redis
      - web

  celery-beat:
    build:
      context: ../../backend
      dockerfile: Dockerfile.staging
    command: celery -A app beat -l warning
    volumes:
      - ../../backend:/usr/src/app
    env_file:
      - ../../.env.staging
    depends_on:
      - celery

volumes:
  postgres_data:
  static_volume:
  media_volume:
